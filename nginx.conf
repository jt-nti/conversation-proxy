worker_processes 1;
daemon off;

error_log <%= ENV["APP_ROOT"] %>/nginx/logs/error.log;
events { worker_connections 1024; }

http {
  log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
  access_log <%= ENV["APP_ROOT"] %>/nginx/logs/access.log cloudfoundry;

  tcp_nopush on;
  keepalive_timeout 30;
  port_in_redirect off; # Ensure that redirects don't include the internal container PORT - <%= ENV["PORT"] %>
  server_tokens off;

  index index.html index.htm Default.htm;
  server {
    listen <%= ENV["PORT"] %>;
    server_name localhost;

    # Experiment to allow CORS for Conversation API. See related gists:
    #  - https://gist.github.com/algal/5480916
    #  - https://gist.github.com/pauloricardomg/7084524
    #  - https://gist.github.com/Stanback/7145487
    location /conversation/api/ {
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  
      set $cors '';
      if ($http_origin ~ '^https?://(localhost|jthub\.github\.io)$') {
       set $cors 'true';
      }

      # OPTIONS indicates a CORS pre-flight request
      if ($request_method = 'OPTIONS') {
        set $cors "${cors}-options";  
      }

      if ($cors = "true-options") {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';
        # Tell client that this pre-flight info is valid for 20 days
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      # Requests from allowed CORS domains
      if ($cors = 'true') {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        proxy_pass https://gateway.watsonplatform.net;
      }
  
      # Reject requests from non-allowed CORS domains
      if ($cors != 'true') {
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 404;
      }
    }
  }
}
